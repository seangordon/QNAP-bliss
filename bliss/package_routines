######################################################################
# List of available definitions (it's not necessary to uncomment them)
######################################################################
###### Command definitions #####
#CMD_AWK="/bin/awk"
#CMD_CAT="/bin/cat"
#CMD_CHMOD="/bin/chmod"
#CMD_CHOWN="/bin/chown"
#CMD_CP="/bin/cp"
#CMD_CUT="/bin/cut"
#CMD_DATE="/bin/date"
#CMD_ECHO="/bin/echo"
#CMD_EXPR="/usr/bin/expr"
#CMD_FIND="/usr/bin/find"
#CMD_GETCFG="/sbin/getcfg"
#CMD_GREP="/bin/grep"
#CMD_GZIP="/bin/gzip"
#CMD_HOSTNAME="/bin/hostname"
#CMD_LN="/bin/ln"
#CMD_LOG_TOOL="/sbin/log_tool"
#CMD_MD5SUM="/bin/md5sum"
#CMD_MKDIR="/bin/mkdir"
#CMD_MV="/bin/mv"
#CMD_RM="/bin/rm"
#CMD_RMDIR="/bin/rmdir"
#CMD_SED="/bin/sed"
#CMD_SETCFG="/sbin/setcfg"
#CMD_SLEEP="/bin/sleep"
#CMD_SORT="/usr/bin/sort"
#CMD_SYNC="/bin/sync"
#CMD_TAR="/bin/tar"
#CMD_TOUCH="/bin/touch"
#CMD_WGET="/usr/bin/wget"
#CMD_WLOG="/sbin/write_log"
#CMD_XARGS="/usr/bin/xargs"
#CMD_7Z="/usr/local/sbin/7z"
#
###### System definitions #####
#SYS_EXTRACT_DIR="$(pwd)"
#SYS_CONFIG_DIR="/etc/config"
#SYS_INIT_DIR="/etc/init.d"
#SYS_STARTUP_DIR="/etc/rcS.d"
#SYS_SHUTDOWN_DIR="/etc/rcK.d"
#SYS_RSS_IMG_DIR="/home/httpd/RSS/images"
#SYS_QPKG_DATA_FILE_GZIP="./data.tar.gz"
#SYS_QPKG_DATA_FILE_BZIP2="./data.tar.bz2"
#SYS_QPKG_DATA_FILE_7ZIP="./data.tar.7z"
#SYS_QPKG_DATA_CONFIG_FILE="./conf.tar.gz"
#SYS_QPKG_DATA_MD5SUM_FILE="./md5sum"
#SYS_QPKG_DATA_PACKAGES_FILE="./Packages.gz"
#SYS_QPKG_CONFIG_FILE="$SYS_CONFIG_DIR/qpkg.conf"
#SYS_QPKG_CONF_FIELD_QPKGFILE="QPKG_File"
#SYS_QPKG_CONF_FIELD_NAME="Name"
#SYS_QPKG_CONF_FIELD_VERSION="Version"
#SYS_QPKG_CONF_FIELD_ENABLE="Enable"
#SYS_QPKG_CONF_FIELD_DATE="Date"
#SYS_QPKG_CONF_FIELD_SHELL="Shell"
#SYS_QPKG_CONF_FIELD_INSTALL_PATH="Install_Path"
#SYS_QPKG_CONF_FIELD_CONFIG_PATH="Config_Path"
#SYS_QPKG_CONF_FIELD_WEBUI="WebUI"
#SYS_QPKG_CONF_FIELD_WEBPORT="Web_Port"
#SYS_QPKG_CONF_FIELD_SERVICEPORT="Service_Port"
#SYS_QPKG_CONF_FIELD_SERVICE_PIDFILE="Pid_File"
#SYS_QPKG_CONF_FIELD_AUTHOR="Author"
#SYS_QPKG_CONF_FIELD_RC_NUMBER="RC_Number"
## The following variables are assigned values at run-time.
#SYS_HOSTNAME=$($CMD_HOSTNAME)
## Data file name (one of SYS_QPKG_DATA_FILE_GZIP, SYS_QPKG_DATA_FILE_BZIP2,
## or SYS_QPKG_DATA_FILE_7ZIP)
#SYS_QPKG_DATA_FILE=
## Base location.
#SYS_QPKG_BASE=""
## Base location of QPKG installed packages.
#SYS_QPKG_INSTALL_PATH=""
## Location of installed software.
#SYS_QPKG_DIR=""
## If the QPKG should be enabled or disabled after the installation/upgrade.
#SYS_QPKG_SERVICE_ENABLED=""
## Architecture of the device the QPKG is installed on.
#SYS_CPU_ARCH=""
## Name and location of system shares
#SYS_PUBLIC_SHARE=""
#SYS_PUBLIC_PATH=""
#SYS_DOWNLOAD_SHARE=""
#SYS_DOWNLOAD_PATH=""
#SYS_MULTIMEDIA_SHARE=""
#SYS_MULTIMEDIA_PATH=""
#SYS_RECORDINGS_SHARE=""
#SYS_RECORDINGS_PATH=""
#SYS_USB_SHARE=""
#SYS_USB_PATH=""
#SYS_WEB_SHARE=""
#SYS_WEB_PATH=""
## Path to ipkg or opkg package tool if installed.
#CMD_PKG_TOOL=
#
######################################################################
# All package specific functions shall call 'err_log MSG' if an error
# is detected that shall terminate the installation.
######################################################################
#
######################################################################
# Define any package specific operations that shall be performed when
# the package is removed.
######################################################################
#PKG_PRE_REMOVE="{
#}"
#
#PKG_MAIN_REMOVE="{
#}"
#
#PKG_POST_REMOVE="{
#}"
#
######################################################################
# Define any package specific initialization that shall be performed
# before the package is installed.
######################################################################
#pkg_init(){
#}
#
######################################################################
# Define any package specific requirement checks that shall be
# performed before the package is installed.
######################################################################

WGET_URL="`${CMD_WGET} -qO- http://www.blisshq.com/app/latest-linux-version`"


pkg_check_requirement(){
  # Hack - for some reason QNAP install environment doesn't see the JAVA_HOME variable
  JAVA_HOME=/usr/local/jre
  
  if [ -z ${JAVA_HOME} ]; then
    err_log "Java is not installed or not properly configured. JAVA_HOME is not defined. "
    err_log "Install the Java JRE QNAP Package"
  fi
 
  if [ ! -f ${JAVA_HOME}/bin/java ]; then
    err_log "Java is not installed or not properly configured. The Java binary could not be located."
    err_log "Install the Java JRE QNAP Package"
  fi
 
  JAVA_VER=`java -version 2>&1 | sed -r "/^.* version/!d;s/^.* version \"[0-9]\.([0-9]).*$/\1/"`
  if [ ${JAVA_VER} -lt 7 ]; then
    err_log "This version of Bliss requires Java 7 or newer. Please update your Java package. "
  fi
  log "Pre-Install Check Completed Successfully"
}

######################################################################
# Define any package specific operations that shall be performed when
# the package is installed.
######################################################################
pkg_pre_install(){
  log "Enter pre_install"

  WGET_FILENAME="`${CMD_ECHO} ${WGET_URL} | ${CMD_SED} -r "s%^.*/(.*)%\1%"`"

  cd ${SYS_QPKG_DIR}
  "${CMD_MKDIR}" install
  cd install
 
  log "SYS_QPKG_DIR = ${SYS_QPKG_DIR}"
  log "WGET_URL = ${WGET_URL}"
  log "WGET_FILENAME = ${WGET_FILENAME}"
  log "SYS_PUBLIC_PATH = ${SYS_PUBLIC_PATH}"

  [ -f ${SYS_QPKG_DIR}/install/${WGET_FILENAME} ] && "${CMD_RM}" ${SYS_QPKG_DIR}/install/${WGET_FILENAME}
  # Specify User Agent to allow blisshq.com to track the number of downloads from QNAP users
  "${CMD_WGET}" --no-check-certificate --user-agent=QNAP ${WGET_URL}

  if [[ $? != 0 ]]; then
    if [ -d ${SYS_PUBLIC_PATH} ] && [ -f ${SYS_PUBLIC_PATH}/${WGET_FILENAME} ]; then
      "${CMD_CP}" ${SYS_PUBLIC_PATH}/${WGET_FILENAME} ${SYS_QPKG_INSTALL_PATH}/install
    else 
      warn_log "There was a problem downloading ${WGET_FILENAME} from the official download link, "
      warn_log "which was \"${WGET_URL}\" "
      warn_log "Alternatively, you may download this file manually and place it in the 'public' shared folder. "
      err_log "Fatal Error Fetching bliss install files"
    fi
  fi
  log "Exit pre_install"
}

pkg_install(){
  log "Enter install"

  WGET_FILENAME="`${CMD_ECHO} ${WGET_URL} | ${CMD_SED} -r "s%^.*/(.*)%\1%"`"

  log "SYS_QPKG_DIR = ${SYS_QPKG_DIR}"
  log "WGET_URL = ${WGET_URL}"
  log "WGET_FILENAME = ${WGET_FILENAME}"
  log "SYS_PUBLIC_PATH = ${SYS_PUBLIC_PATH}"

  cd ${SYS_QPKG_DIR}/install

  # Set Install Path
  log INSTALL_PATH=${SYS_QPKG_DIR}
  "${CMD_ECHO}" INSTALL_PATH=${SYS_QPKG_DIR} > ${SYS_QPKG_DIR}/install/auto-install.properties
  #run the installer
  log "Calling - /usr/local/jre/bin/java -jar ${SYS_QPKG_DIR}/install/${WGET_FILENAME} -options ${SYS_QPKG_DIR}/install/auto-install.properties"
  /usr/local/jre/bin/java -jar ${SYS_QPKG_DIR}/install/${WGET_FILENAME} -options ${SYS_QPKG_DIR}/install/auto-install.properties 
  #rm ${SYS_QPKG_DIR}/install/auto-install.properties
  #rm ${SYS_QPKG_DIR}/install/${WGET_FILENAME}
  
  BLISS_WORKING_DIR="${SYS_QPKG_DIR}/.bliss"
  log "BLISS_WORKING_DIR = ${BLISS_WORKING_DIR}"
  #default settings
  if [ ! -f ${BLISS_WORKING_DIR}/settings ]; then
    mkdir -p ${BLISS_WORKING_DIR}
    echo "musicLibrary=/share/Multimedia/" > ${BLISS_WORKING_DIR}/settings
  fi

  log "Exit install"
}

pkg_post_install(){
  log "post-install"
}
